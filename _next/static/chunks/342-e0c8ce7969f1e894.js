"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[342],{134:function(r,e,n){var t=n(1051),a=n(6212),o=n(650);e.Z=function(r,e,n,i,l){var u=(0,t.H6)("monster"===r?"monster":a.$[r],e),c=n?(0,o.J)(l,n):0;return(0,t.UQ)(i+c,u)}},5924:function(r,e){function n(r,e,n){return e in r?Object.defineProperty(r,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):r[e]=n,r}function t(r){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{},a=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(r){return Object.getOwnPropertyDescriptor(t,r).enumerable})))),a.forEach((function(e){n(r,e,t[e])}))}return r}var a={control:function(r,e){return t({},r,{backgroundColor:"#F0EFDD"})},option:function(r,e){return t({},r,{backgroundColor:"#F0EFDD",color:"black"})}};e.Z=a},2757:function(r,e,n){function t(r,e){(null==e||e>r.length)&&(e=r.length);for(var n=0,t=new Array(e);n<e;n++)t[n]=r[n];return t}function a(r,e){return function(r){if(Array.isArray(r))return r}(r)||function(r,e){var n=null==r?null:"undefined"!==typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=n){var t,a,o=[],i=!0,l=!1;try{for(n=n.call(r);!(i=(t=n.next()).done)&&(o.push(t.value),!e||o.length!==e);i=!0);}catch(u){l=!0,a=u}finally{try{i||null==n.return||n.return()}finally{if(l)throw a}}return o}}(r,e)||function(r,e){if(!r)return;if("string"===typeof r)return t(r,e);var n=Object.prototype.toString.call(r).slice(8,-1);"Object"===n&&r.constructor&&(n=r.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return t(r,e)}(r,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}n.d(e,{yr:function(){return s},BO:function(){return f},ZS:function(){return p}});var o=[2,3,4,6],i=[2],l=[2,4],u=[2,3,4,6],c=[2,4,14],s=[{key:1,armorType:null,armorDescription:"Natural armor (Monster)"},{key:2,armorType:10,armorDescription:"AT 10 - No Armor"},{key:3,armorType:9,armorDescription:"AT 9 - Shield only"},{key:4,armorType:8,armorDescription:"AT 8 - Leather armor"},{key:5,armorType:8,armorDescription:"AT 8 - Padded armor"},{key:6,armorType:7,armorDescription:"AT 7 - Leather armor + shield"},{key:7,armorType:7,armorDescription:"AT 7 - Padded armor + shield"},{key:8,armorType:7,armorDescription:"AT 7 - Studded leather"},{key:9,armorType:7,armorDescription:"AT 7 - Ring mail"},{key:10,armorType:6,armorDescription:"AT 6 - Studded leather + shield"},{key:11,armorType:6,armorDescription:"AT 6 - Ring mail + shield"},{key:12,armorType:6,armorDescription:"AT 6 - Scale mail"},{key:13,armorType:5,armorDescription:"AT 5 - Scale mail + shield"},{key:14,armorType:5,armorDescription:"AT 5 - Chain mail"},{key:15,armorType:4,armorDescription:"AT 4 - Chain mail + shield"},{key:16,armorType:4,armorDescription:"AT 4 - Splint mail"},{key:17,armorType:4,armorDescription:"AT 4 - Banded mail"},{key:18,armorType:3,armorDescription:"AT 3 - Splint mail + shield"},{key:19,armorType:3,armorDescription:"AT 3 - Banded mail + shield"},{key:20,armorType:3,armorDescription:"AT 3 - Plate mail"},{key:21,armorType:2,armorDescription:"AT 2 - Plate mail + shield"}],m=function(r,e){return r.filter((function(r){return null!==r.armorType&&e.includes(r.armorType.toString())}))},d={monster:function(){return s},cleric:function(){return s.slice(1)},druid:function(){return m(s,o)},fighter:function(){return s.slice(1)},paladin:function(){return s.slice(1)},ranger:function(){return s.slice(1)},magicuser:function(){return m(s,i)},illusionist:function(){return m(s,i)},thief:function(){return m(s,l)},assassin:function(){return m(s,u)},monk:function(){return m(s,i)},bard:function(){return m(s,c)}},f=function(r){return d[r]().map((function(r){return{value:r.key,label:r.armorDescription}}))},y={" ":"Natural Armor (Monster)",10:"AT 10 - No Armor",9:"AT 9 - Shield only",8:"AT 8 - Leather or padded armor",7:"AT 7 - Leather or padded armor + shield / studded leather / ring mail",6:"AT 6 - Studded leather or ring mail + shield / scale mail",5:"AT 5 - Scale mail + shield / chain mail",4:"AT 4 - Chain mail + shield / splint mail / banded mail",3:"AT 3 - Splint or banded mail + shield / plate mail",2:"AT 2 - Plate mail + shield"},p=Object.entries(y).reverse().map((function(r){var e=a(r,2);return{value:e[0],label:e[1]}}))},6212:function(r,e,n){function t(r,e){(null==e||e>r.length)&&(e=r.length);for(var n=0,t=new Array(e);n<e;n++)t[n]=r[n];return t}function a(r,e){return function(r){if(Array.isArray(r))return r}(r)||function(r,e){var n=null==r?null:"undefined"!==typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=n){var t,a,o=[],i=!0,l=!1;try{for(n=n.call(r);!(i=(t=n.next()).done)&&(o.push(t.value),!e||o.length!==e);i=!0);}catch(u){l=!0,a=u}finally{try{i||null==n.return||n.return()}finally{if(l)throw a}}return o}}(r,e)||function(r,e){if(!r)return;if("string"===typeof r)return t(r,e);var n=Object.prototype.toString.call(r).slice(8,-1);"Object"===n&&r.constructor&&(n=r.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return t(r,e)}(r,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}n.d(e,{$:function(){return o},A:function(){return i}});var o={cleric:"cleric",druid:"cleric",fighter:"fighter",ranger:"fighter",paladin:"fighter",magicuser:"magicuser",illusionist:"magicuser",thief:"thief",assassin:"thief",monk:"cleric",bard:"fighter"},i=Object.entries({monster:"Monster",cleric:"Cleric",druid:"Druid",fighter:"Fighter",ranger:"Ranger",paladin:"Paladin",magicuser:"Magic-User",illusionist:"Illusionist",thief:"Thief",assassin:"Assassin",monk:"Monk",bard:"Bard"}).map((function(r){var e=a(r,2);return{value:e[0],label:e[1]}}))},1051:function(r,e,n){function t(r,e){(null==e||e>r.length)&&(e=r.length);for(var n=0,t=new Array(e);n<e;n++)t[n]=r[n];return t}function a(r,e){return function(r){if(Array.isArray(r))return r}(r)||function(r,e){var n=null==r?null:"undefined"!==typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=n){var t,a,o=[],i=!0,l=!1;try{for(n=n.call(r);!(i=(t=n.next()).done)&&(o.push(t.value),!e||o.length!==e);i=!0);}catch(u){l=!0,a=u}finally{try{i||null==n.return||n.return()}finally{if(l)throw a}}return o}}(r,e)||i(r,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(r){return function(r){if(Array.isArray(r))return t(r)}(r)||function(r){if("undefined"!==typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}(r)||i(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(r,e){if(r){if("string"===typeof r)return t(r,e);var n=Object.prototype.toString.call(r).slice(8,-1);return"Object"===n&&r.constructor&&(n=r.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?t(r,e):void 0}}n.d(e,{H6:function(){return f},UQ:function(){return y},zT:function(){return h}});var l=new Map([["up to 1-1","21"],["1-1","20"],["1","19"],["1+","18"],["2-3+","16"],["4-5+","15"],["6-7+","13"],["8-9+","12"],["10-11+","10"],["12-13+","9"],["14-15+","8"],["16+","7"]]),u={0:21,1:20,3:18,5:16,7:14,9:12,11:10,13:8,15:6,17:4},c={1:20,4:18,7:16,10:14,13:12,16:10,19:9},s={1:21,5:19,9:16,13:14,17:12,21:10},m={1:21,6:19,11:16,16:13,21:11},d=function(r,e){return Object.entries(r).reduce((function(r,n){var t=a(n,2),o=t[0],i=t[1];return parseInt(o,10)<=parseInt(e,10)?i:r}),30)},f=function(r,e){switch(r){case"monster":return l.get(e);case"fighter":return d(u,e);case"cleric":return d(c,e);case"magicuser":return d(m,e);case"thief":return d(s,e)}},y=function(r,e){var n=e-r;return n>=20?Math.max(20,n-5):n},p=function(r){var e,n,t=Object.entries(r).map((function(r){return parseInt(r[0],10)})),a=(e=Math).max.apply(e,o(t)),i=(n=Math).min.apply(n,o(t));return Array.from(Array(a-i+1).keys()).map((function(r){return{value:"".concat(r+i),label:"Level ".concat(r+i).concat(r+i===a?"+":"")}}))},h=function(r){switch(r){case"monster":return Array.from(l).map((function(r){var e=a(r,2),n=e[0];e[1];return{value:n,label:"".concat(n," HD")}}));case"fighter":return p(u);case"cleric":return p(c);case"magicuser":return p(m);case"thief":return p(s)}}},650:function(r,e,n){function t(r,e){(null==e||e>r.length)&&(e=r.length);for(var n=0,t=new Array(e);n<e;n++)t[n]=r[n];return t}function a(r,e){return function(r){if(Array.isArray(r))return r}(r)||function(r,e){var n=null==r?null:"undefined"!==typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=n){var t,a,o=[],i=!0,l=!1;try{for(n=n.call(r);!(i=(t=n.next()).done)&&(o.push(t.value),!e||o.length!==e);i=!0);}catch(u){l=!0,a=u}finally{try{i||null==n.return||n.return()}finally{if(l)throw a}}return o}}(r,e)||function(r,e){if(!r)return;if("string"===typeof r)return t(r,e);var n=Object.prototype.toString.call(r).slice(8,-1);"Object"===n&&r.constructor&&(n=r.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return t(r,e)}(r,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}n.d(e,{J:function(){return l},C:function(){return s}});var o=["Dagger (Held)","Dagger (Hurled)","Dart","Fist or Open Hand","Staff, quarter"],i=new Map([["Natural Weapon (Monster)",[0,0,0,0,0,0,0,0,0]],["Axe, Battle",[-3,-2,-1,-1,0,0,1,1,2]],["Axe, Hand (Held)",[-3,-2,-2,-1,0,0,1,1,1]],["Axe, Hand (Hurled)",[-4,-3,-2,-1,-1,0,0,0,1]],["Bardiche",[-2,-1,0,0,1,1,2,2,3]],["Bec de Corbin",[2,2,2,0,0,0,0,0,-1]],["Bill-Guisarme",[0,0,0,0,0,0,1,0,0]],["Bo Stick",[-9,-7,-5,-3,-1,0,1,0,3]],["Bow, composite, long",[-3,-3,-1,0,1,2,2,2,3]],["Bow, composite, short",[-3,-3,-1,0,1,2,2,2,3]],["Bow, long",[-1,0,0,1,2,3,3,3,3]],["Bow, short",[-5,-4,-1,0,0,1,2,2,2]],["Club (Held)",[-5,-4,-3,-2,-1,-1,0,0,1]],["Club (Hurled)",[-7,-5,-3,-2,-1,-1,-1,0,0]],["Crossbow, heavy",[-1,0,1,2,3,3,4,4,4]],["Crossbow, light",[-2,-1,0,0,1,2,3,3,3]],["Dagger (Held)",[-3,-3,-2,-2,0,0,1,1,3]],["Dagger (Hurled)",[-5,-4,-3,-2,-1,-1,0,0,1]],["Dart",[-5,-4,-3,-2,-1,0,1,0,1]],["Fauchard",[-2,-2,-1,-1,0,0,0,-1,-1]],["Fauchard-Fork",[-1,-1,-1,0,0,0,1,0,1]],["Fist or Open Hand",[-7,-5,-3,-1,0,0,2,0,4]],["Flail, Footman\u2019s",[2,2,1,2,1,1,1,1,-1]],["Flail, Horseman\u2019s",[0,0,0,0,0,1,1,1,0]],["Fork, Military",[-2,-2,-1,0,0,1,1,0,1]],["Glaive",[-1,-1,0,0,0,0,0,0,0]],["Glaive-Guisarme",[-1,-1,0,0,0,0,0,0,0]],["Guisarme",[-2,-2,-1,-1,0,0,0,-1,-1]],["Guisarme-Voulge",[-1,-1,0,1,1,1,0,0,0]],["Halberd",[1,1,1,2,2,2,1,1,0]],["Hammer, Lucern",[1,1,2,2,2,1,1,0,0]],["Hammer (Held)",[0,1,0,1,0,0,0,0,0]],["Hammer (Hurled)",[-2,-1,0,0,0,0,0,0,1]],["Javelin",[-5,-4,-3,-2,-1,0,1,0,1]],["Jo Stick",[-8,-6,-4,-2,-1,0,1,0,2]],["Lance (heavy horse)",[3,3,2,2,2,1,1,0,0]],["Lance (light horse)",[-2,-2,-1,0,0,0,0,0,0]],["Lance (medium horse)",[0,1,1,1,1,0,0,0,0]],["Mace, Footman\u2019s",[1,1,0,0,0,0,0,1,-1]],["Mace, Horseman\u2019s",[1,1,0,0,0,0,0,0,0]],["Morning Star",[0,1,1,1,1,1,1,2,2]],["Partisan",[0,0,0,0,0,0,0,0,0]],["Pick, Military, Footman\u2019s",[2,2,1,1,0,-1,-1,-1,-2]],["Pick, Military, Horseman\u2019s",[1,1,1,1,0,0,-1,-1,-1]],["Pike, awl",[-1,0,0,0,0,0,0,-1,-2]],["Ranseur",[-2,-1,-1,0,0,0,0,0,1]],["Scimitar",[-3,-2,-2,-1,0,0,1,1,3]],["Sling (bullet)",[-2,-2,-1,0,0,0,2,1,3]],["Sling (stone)",[-5,-4,-2,-1,0,0,2,1,3]],["Spear (held)",[-2,-1,-1,-1,0,0,0,0,0]],["Spear (hurled)",[-3,-3,-2,-2,-1,0,0,0,0]],["Spetum",[-2,-1,0,0,0,0,0,1,2]],["Staff, quarter",[-7,-5,-3,-1,0,0,1,1,1]],["Sword, bastard",[0,0,1,1,1,1,1,1,0]],["Sword, broad",[-3,-2,-1,0,0,1,1,1,2]],["Sword, long",[-2,-1,0,0,0,0,0,1,2]],["Sword, short",[-3,-2,-1,0,0,0,1,0,2]],["Sword, two-handed",[2,2,2,2,3,3,3,1,0]],["Trident",[-3,-2,-1,-1,0,0,1,0,1]],["Voulge",[-1,-1,0,1,1,1,0,0,0]]]),l=function(r,e){return i.get(r)[e-2]},u=function(r,e){return Array.from(r).filter((function(r){return e.includes(r[0])}))},c={monster:i,cleric:u(i,["Club (Held)","Club (Hurled)","Fist or Open Hand","Flail, Footman\u2019s","Flail, Horseman\u2019s","Hammer, Lucern","Hammer (Held)","Hammer (Hurled)","Mace, Footman\u2019s","Mace, Horseman\u2019s","Staff, quarter"]),druid:u(i,["Club (Held)","Club (Hurled)","Dagger (Held)","Dagger (Hurled)","Dart","Fist or Open Hand","Hammer, Lucern","Hammer (Held)","Hammer (Hurled)","Scimitar","Sling (bullet)","Sling (stone)","Spear (held)","Spear (hurled)","Staff, quarter"]),fighter:Array.from(i).slice(1),paladin:Array.from(i).slice(1),ranger:Array.from(i).slice(1),magicuser:u(i,o),illusionist:u(i,o),thief:u(i,["Club (Held)","Club (Hurled)","Dagger (Held)","Dagger (Hurled)","Dart","Fist or Open Hand","Sling (bullet)","Sling (stone)","Sword, broad","Sword, long","Sword, short"]),assassin:Array.from(i).slice(1),monk:u(i,["Axe, Hand (Held)","Axe, Hand (Hurled)","Bardiche","Bec de Corbin","Bill-Guisarme","Bo Stick","Club (Held)","Club (Hurled)","Crossbow, heavy","Crossbow, light","Dagger (Held)","Dagger (Hurled)","Fauchard","Fauchard-Fork","Fist or Open Hand","Fork, Military","Glaive","Glaive-Guisarme","Guisarme","Guisarme-Voulge","Halberd","Hammer, Lucern","Javelin","Jo Stick","Lance (heavy horse)","Lance (light horse)","Lance (medium horse)","Partisan","Pike, awl","Ranseur","Spear (held)","Spear (hurled)","Spetum","Staff, quarter","Trident","Voulge"]),bard:u(i,["Club (Held)","Club (Hurled)","Dagger (Held)","Dagger (Hurled)","Dart","Fist or Open Hand","Javelin","Sling (bullet)","Sling (stone)","Scimitar","Spear (held)","Spear (hurled)","Staff, quarter","Sword, bastard","Sword, broad","Sword, long","Sword, short"])},s=function(r){return Array.from(c[r]).map((function(r){var e=a(r,2),n=e[0];e[1];return{value:n,label:n}}))}}}]);